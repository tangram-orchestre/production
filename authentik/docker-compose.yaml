services:
  authentik-postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    user: 1000:1000
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ./docker-data/db:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    env_file:
      - .env
  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    user: 1000:1000
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ./docker-data/redis:/data
    networks:
      - backend

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.10
    restart: unless-stopped
    command: server
    container_name: authentik-server
    user: 1000:1000
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_WEB__WORKERS: 1
    labels:
      - traefik.enable=true
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - traefik.http.routers.authentik.rule=Host(`auth.tangram-orchestre.fr`)
      - traefik.http.routers.authentik.tls=true
      - traefik.http.routers.authentik.tls.certresolver=resolver
    volumes:
      - ./docker-data/icons:/icons
      - ./docker-data/media:/media
      - ./docker-data/custom-templates:/templates
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - authentik-postgresql
      - authentik-redis

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.10
    restart: unless-stopped
    command: worker
    container_name: authentik-worker
    user: 1000:1000
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-data/media:/media
      - ./docker-data/certs:/certs
      - ./docker-data/custom-templates:/templates
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - authentik-postgresql
      - authentik-redis

networks:
  backend:
    external: true
